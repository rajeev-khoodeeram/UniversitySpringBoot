spring.application.name=backend



# Spring Datasource Configuration - here we are connecting to mysql
# test on mac -- works
spring.datasource.url=jdbc:mysql://localhost:3306/university

# for docker; use this one
#spring.datasource.url=jdbc:mysql://db:3306/university
#spring.datasource.username=rajeev

#avoid using root in production !!
spring.datasource.username=root
spring.datasource.password=Rk2025.;
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Properties for Spring Data JPA
# Hibernate Configuration; Important for schema generation and SQL logging
# for development purposes only
# for local testing use 'create' or 'update'
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#used for JWT authentication
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password= 
spring.data.redis.timeout=60000
jwt.secret=abcdefghijklmnopqrstuvwxyz123456
jwt.expiration-ms=86400000 

# CORS Configuration ; you ccan centralize it here
# for development purposes only
# in production, set it to your frontend domain. - to check
# cors.allowed-origins=http://localhost:3000

logging.level.org.springframework.security=DEBUG
